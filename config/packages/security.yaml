security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_provider:
            entity:
                class: App\Entity\User
                property: email
        app_client_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            entry_point: App\Security\LoginClientAuthenticator
            provider: app_client_provider
            custom_authenticator: App\Security\LoginClientAuthenticator
            form_login:
                login_path: app_client_login
                check_path: app_client_login
                enable_csrf: true
            logout:
                path: app_client_logout
                # where to redirect after logout
                # target: app_any_route
            json_login:
                # api_login is a route we will create below
                check_path: api_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            # by default, the feature allows 5 login attempts per minute

            login_throttling:
                max_attempts: 3          # per minute ...
                interval: '15 minutes' # ... or in a custom period

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true
        client:
            pattern: ^/owner
            lazy: true
            entry_point: App\Security\LoginOwnerAuthenticator
            provider: app_provider
            custom_authenticator: App\Security\LoginOwnerAuthenticator
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            logout:
                path: app_logout
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: PUBLIC_ACCESS, host: gymsystem.test }
        - { path: ^/login, roles: PUBLIC_ACCESS, host: greenfit.test }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/owner/users, roles: ROLE_SUPER_OWNER, host: gymsystem.test }
        - { path: ^/owner, roles: ROLE_OWNER, host: gymsystem.test }
        - { path: ^/manage-panel, roles: ROLE_CLIENT, host: greenfit.test }
        - { path: ^/api, roles: [IS_AUTHENTICATED_FULLY, ROLE_API], host: apigymsystem.test }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
